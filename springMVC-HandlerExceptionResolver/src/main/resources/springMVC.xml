<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--1.开启组件扫描-->
    <context:component-scan base-package="xyz.zhouge.exception"/>

    <!--2.配置试图解析器-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="characterEncoding" value="UTF-8"/>
        <property name="order" value="1"/>
        <property name="templateEngine">

            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>

            </bean>
        </property>
    </bean>

    <!--3.配置mvc注解驱动-->
    <mvc:annotation-driven/>

    <!--4.配置默认servlet-->
    <mvc:default-servlet-handler/>

    <!--5.文件上传解析器-->
    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <!--6.配置拦截器-->
    <mvc:interceptors>
        <!--①使用注入内部bean方式 将拦截器类交给ioc容器进行管理，但这配置的全局的拦截器-->
        <!-- <bean class="xyz.zhouge.interceptor.mInterceptor.FirstIntercepter"></bean>-->

        <!--②使用引用外部bean的方式 将拦截器类交给ioc容器进行管理，但这配置的是全局拦截器-->
        <!--<ref bean="firstIntercepter"></ref>-->

        <!--③配置子拦截器，可自定义规则-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/"/>
            <ref bean="firstInterceptor"/>
        </mvc:interceptor>

    </mvc:interceptors>


    <!--7.配置异常处理器-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        &lt;!&ndash;设置异常映射&ndash;&gt;
        <property name="exceptionMappings">
            <props>

                &lt;!&ndash;设置具体的异常类对应的映射处理器&ndash;&gt;
                <prop key="java.lang.ArithmeticException">error</prop>

            </props>
        </property>

        &lt;!&ndash;设置异常参数 通过request域对象传递 key是ex  value是具体的异常&ndash;&gt;
        <property name="exceptionAttribute" value="ex"></property>

    </bean>-->




</beans>